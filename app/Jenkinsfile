pipeline {
    agent any
    
    environment {
        IMAGE_NAME = 'devops-demo-api'
        IMAGE_TAG = "${BUILD_NUMBER}"
        KUBECONFIG = credentials('kubeconfig')
    }
    
    stages {
        stage('Checkout') {
            steps {
                echo 'Checking out code...'
                checkout scm
            }
        }
        
        stage('Build Docker Image') {
            steps {
                echo 'Building Docker image...'
                script {
                    sh "docker build -t ${IMAGE_NAME}:${IMAGE_TAG} ./app"
                    sh "docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${IMAGE_NAME}:latest"
                }
            }
        }
        
        stage('Test') {
            steps {
                echo 'Running tests...'
                script {
                    sh """
                        docker run --rm ${IMAGE_NAME}:${IMAGE_TAG} python -c "
import requests
import time
import subprocess
import sys

# Start the app in background
proc = subprocess.Popen(['/app/venv/bin/python', '/app/app.py'])
time.sleep(3)

try:
    response = requests.get('http://localhost:5000/health')
    assert response.status_code == 200
    print('Health check passed!')
except Exception as e:
    print(f'Test failed: {e}')
    sys.exit(1)
finally:
    proc.terminate()
                        "
                    """
                }
            }
        }
        
        stage('Deploy to Kubernetes') {
            steps {
                echo 'Deploying to Kubernetes...'
                script {
                    sh """
                        kubectl set image deployment/devops-demo-api api=${IMAGE_NAME}:${IMAGE_TAG}
                        kubectl rollout status deployment/devops-demo-api
                    """
                }
            }
        }
        
        stage('Verify Deployment') {
            steps {
                echo 'Verifying deployment...'
                script {
                    sh """
                        kubectl get pods -l app=devops-demo-api
                        kubectl port-forward service/devops-demo-service 9000:80 &
                        sleep 5
                        curl -f http://localhost:9000/health || exit 1
                        echo 'Deployment verification successful!'
                    """
                }
            }
        }
    }
    
    post {
        always {
            echo 'Pipeline completed!'
            sh 'docker system prune -f'
        }
        success {
            echo 'üéâ Pipeline succeeded! Application deployed successfully.'
        }
        failure {
            echo '‚ùå Pipeline failed. Check logs for details.'
        }
    }
}